
; 64tass Turbo Assembler Macro V1.57.2900 listing file
; 64tass -L labels.txt -b -o ../../junior-emulator/macrotest.rom macrotest.asm
; Thu Jan 19 17:30:30 2023

;Offset	;Hex		;Monitor	;Source

;******  Processing input file: macrotest.asm


;******  Processing file: prsrconst.asm

="a"					prsla    = "a"  ; a
="A"					prsua    = "A"  ; A
="["					prslbr   = "["  ; [
="]"					prsrbr   = "]"  ; ]
="/"					prsfsl   = "/"   ; /
=0					amimp    = 0
=1					amacc    = 1
=2					amimm    = 2
=3					amzp     = 3
=4					amzpx    = 4
=5					amzpy    = 5
=6					amabs    = 6
=7					amabx    = 7
=8					amaby    = 8
=9					amrel    = 9
=10					amxin    = 10
=11					aminy    = 11
=12					amind    = 12
=13					ambpr    = 13
=$00					ltempty  = %00000000
=$01					ltlbdef  = %00000001
=$02					ltinstr  = %00000010
=$04					ltlbuse  = %00000100
=$08					ltdirtv  = %00001000
=$10					ltmcdef  = %00010000
=$20					ltmcuse  = %00100000
=$40					ltcomm   = %01000000
=$80					ltrelad  = %10000000
=16					vshex    = 1*16
=32					vsdec    = 2*16
=48					vsbin    = 3*16
=64					vsoct    = 4*16
=80					vsexpr   = 5*16
=96					vslabel  = 6*16
=112					vschar   = 7*16

;******  Return to file: macrotest.asm


;******  Processing file: prsrmacros.asm


;******  Return to file: macrotest.asm


;******  Processing file: assert.asm


;******  Return to file: macrotest.asm

.8000	4c 40 80	jmp $8040	        jmp start

;******  Processing file: io.asm

=$30					straddr  = $30
.8003					sprint
.8003	68		pla		         pla
.8004	85 30		sta $30		         sta straddr
.8006	68		pla		         pla
.8007	85 31		sta $31		         sta straddr+1
.8009	a5 01		lda $01		        lda $0001
.800b	48		pha		        pha
.800c	a9 02		lda #$02	        lda #$02
.800e	85 01		sta $01		        sta $0001
.8010	a0 00		ldy #$00	         ldy #0
.8012	b1 30		lda ($30),y	loop     lda (straddr),y
.8014	f0 07		beq $801d	         beq end
.8016	99 00 c0	sta $c000,y	         sta $c000,y
.8019	c8		iny		         iny
.801a	4c 12 80	jmp $8012	         jmp loop
.801d	98		tya		end      tya
.801e	18		clc		         clc
.801f	65 30		adc $30		         adc straddr
.8021	85 30		sta $30		         sta straddr
.8023	a9 00		lda #$00	         lda #0
.8025	65 31		adc $31		         adc straddr+1
.8027	68		pla		        pla
.8028	85 01		sta $01		        sta $0001
.802a	48		pha		         pha
.802b	a5 30		lda $30		         lda straddr
.802d	48		pha		         pha
.802e	60		rts		         rts
.802f					settextmode
.802f	a5 01		lda $01		        lda $0001
.8031	48		pha		        pha
.8032	64 01		stz $01		        stz $0001
.8034	a9 01		lda #$01	        lda #1
.8036	8d 00 d0	sta $d000	        sta $d000
.8039	9c 01 d0	stz $d001	        stz $d001
.803c	68		pla		        pla
.803d	85 01		sta $01		        sta $0001
.803f	60		rts		        rts

;******  Return to file: macrotest.asm

.8040					start
.8040	20 2f 80	jsr $802f	        jsr settextmode
.8043	20 03 80	jsr $8003	         jsr sprint
>8046	48 65 6c 6c 6f			         .text "Hello"
>804b	0d 00				         .byte 13,0
.804d					test1
.804d	a9 61		lda #$61	         lda #"a"
.804f	c9 61		cmp #$61	         cmp #prsla  ; "a"
.8051	90 0c		bcc $805f	         bcc nota     ; notAlpha
.8053	c9 5b		cmp #$5b	         cmp #prslbr ; "["
.8055	90 1e		bcc $8075	         bcc isa     ; isAlpha
.8057	c9 41		cmp #$41	         cmp #prsua  ; "A"
.8059	90 04		bcc $805f	         bcc nota
.805b	c9 5b		cmp #$5b	         cmp #$5b   ; {SHIFT-+}
.805d	b0 00		bcs $805f	         bcs nota     ; notAlpha
.805f	20 03 80	jsr $8003	nota       jsr sprint
>8062	05				         .byte 5
>8063	40 31 3a 20			         .text "@1: "
>8067	00				         .byte 0
.8068	20 03 80	jsr $8003	         jsr sprint
>806b	48 65 6c 6c 6f			         .text "Hello"
>8070	0d 00				         .byte 13,0
.8072	4c 88 80	jmp $8088	         jmp e_isa
.8075	20 03 80	jsr $8003	isa       jsr sprint
>8078	05				         .byte 5
>8079	40 31 3a 20			         .text "@1: "
>807d	00				         .byte 0
.807e	20 03 80	jsr $8003	         jsr sprint
>8081	48 65 6c 6c 6f			         .text "Hello"
>8086	0d 00				         .byte 13,0
.8088					e_isa
.8088	4c 88 80	jmp $8088	         jmp *
.808b					test2
.808b	a9 5b		lda #$5b	         lda #"["
.808d	c9 61		cmp #$61	         cmp #prsla  ; "a"
.808f	90 22		bcc $80b3	         bcc nota     ; notAlpha
.8091	c9 5b		cmp #$5b	         cmp #prslbr ; "["
.8093	90 08		bcc $809d	         bcc isa     ; isAlpha
.8095	c9 41		cmp #$41	         cmp #prsua  ; "A"
.8097	90 1a		bcc $80b3	         bcc nota
.8099	c9 5b		cmp #$5b	         cmp #$5b   ; {SHIFT-+}
.809b	b0 16		bcs $80b3	         bcs nota     ; notAlpha
.809d	20 03 80	jsr $8003	isa       jsr sprint
>80a0	05				         .byte 5
>80a1	40 31 3a 20			         .text "@1: "
>80a5	00				         .byte 0
.80a6	20 03 80	jsr $8003	         jsr sprint
>80a9	48 65 6c 6c 6f			         .text "Hello"
>80ae	0d 00				         .byte 13,0
.80b0	4c c6 80	jmp $80c6	         jmp e_nota
.80b3	20 03 80	jsr $8003	nota       jsr sprint
>80b6	05				         .byte 5
>80b7	40 31 3a 20			         .text "@1: "
>80bb	00				         .byte 0
.80bc	20 03 80	jsr $8003	         jsr sprint
>80bf	48 65 6c 6c 6f			         .text "Hello"
>80c4	0d 00				         .byte 13,0
.80c6					e_nota
.80c6					test3
.80c6	a9 7a		lda #$7a	         lda #"z"
.80c8	c9 61		cmp #$61	         cmp #prsla  ; "a"
.80ca	90 0c		bcc $80d8	         bcc nota     ; notAlpha
.80cc	c9 5b		cmp #$5b	         cmp #prslbr ; "["
.80ce	90 1e		bcc $80ee	         bcc isa     ; isAlpha
.80d0	c9 41		cmp #$41	         cmp #prsua  ; "A"
.80d2	90 04		bcc $80d8	         bcc nota
.80d4	c9 5b		cmp #$5b	         cmp #$5b   ; {SHIFT-+}
.80d6	b0 00		bcs $80d8	         bcs nota     ; notAlpha
.80d8	20 03 80	jsr $8003	nota       jsr sprint
>80db	05				         .byte 5
>80dc	40 31 3a 20			         .text "@1: "
>80e0	00				         .byte 0
.80e1	20 03 80	jsr $8003	         jsr sprint
>80e4	48 65 6c 6c 6f			         .text "Hello"
>80e9	0d 00				         .byte 13,0
.80eb	4c 01 81	jmp $8101	         jmp e_isa
.80ee	20 03 80	jsr $8003	isa       jsr sprint
>80f1	05				         .byte 5
>80f2	40 31 3a 20			         .text "@1: "
>80f6	00				         .byte 0
.80f7	20 03 80	jsr $8003	         jsr sprint
>80fa	48 65 6c 6c 6f			         .text "Hello"
>80ff	0d 00				         .byte 13,0
.8101					e_isa
.8101					test4
.8101	a9 5f		lda #$5f	         lda #"_"
.8103	c9 61		cmp #$61	         cmp #prsla  ; "a"
.8105	90 22		bcc $8129	         bcc isa     ; notAlpha
.8107	c9 5b		cmp #$5b	         cmp #prslbr ; "["
.8109	90 08		bcc $8113	         bcc nota     ; isAlpha
.810b	c9 41		cmp #$41	         cmp #prsua  ; "A"
.810d	90 1a		bcc $8129	         bcc isa
.810f	c9 5b		cmp #$5b	         cmp #$5b   ; {SHIFT-+}
.8111	b0 16		bcs $8129	         bcs isa     ; notAlpha
.8113	20 03 80	jsr $8003	nota       jsr sprint
>8116	05				         .byte 5
>8117	40 31 3a 20			         .text "@1: "
>811b	00				         .byte 0
.811c	20 03 80	jsr $8003	         jsr sprint
>811f	48 65 6c 6c 6f			         .text "Hello"
>8124	0d 00				         .byte 13,0
.8126	4c 3c 81	jmp $813c	         jmp e_isa
.8129	20 03 80	jsr $8003	isa       jsr sprint
>812c	05				         .byte 5
>812d	40 31 3a 20			         .text "@1: "
>8131	00				         .byte 0
.8132	20 03 80	jsr $8003	         jsr sprint
>8135	48 65 6c 6c 6f			         .text "Hello"
>813a	0d 00				         .byte 13,0
.813c					e_isa
.813c					test5
.813c	a9 41		lda #$41	         lda #"A"
.813e	c9 61		cmp #$61	         cmp #prsla  ; "a"
.8140	90 0c		bcc $814e	         bcc isa     ; notAlpha
.8142	c9 5b		cmp #$5b	         cmp #prslbr ; "["
.8144	90 1e		bcc $8164	         bcc nota     ; isAlpha
.8146	c9 41		cmp #$41	         cmp #prsua  ; "A"
.8148	90 04		bcc $814e	         bcc isa
.814a	c9 5b		cmp #$5b	         cmp #$5b   ; {SHIFT-+}
.814c	b0 00		bcs $814e	         bcs isa     ; notAlpha
.814e	20 03 80	jsr $8003	isa       jsr sprint
>8151	05				         .byte 5
>8152	40 31 3a 20			         .text "@1: "
>8156	00				         .byte 0
.8157	20 03 80	jsr $8003	         jsr sprint
>815a	48 65 6c 6c 6f			         .text "Hello"
>815f	0d 00				         .byte 13,0
.8161	4c 77 81	jmp $8177	         jmp e_nota
.8164	20 03 80	jsr $8003	nota       jsr sprint
>8167	05				         .byte 5
>8168	40 31 3a 20			         .text "@1: "
>816c	00				         .byte 0
.816d	20 03 80	jsr $8003	         jsr sprint
>8170	48 65 6c 6c 6f			         .text "Hello"
>8175	0d 00				         .byte 13,0
.8177					e_nota
.8177					test6
.8177	a9 5f		lda #$5f	         lda #"_"
.8179	c9 61		cmp #$61	         cmp #prsla  ; "a"
.817b	90 22		bcc $819f	         bcc isa     ; notAlpha
.817d	c9 5b		cmp #$5b	         cmp #prslbr ; "["
.817f	90 08		bcc $8189	         bcc nota     ; isAlpha
.8181	c9 41		cmp #$41	         cmp #prsua  ; "A"
.8183	90 1a		bcc $819f	         bcc isa
.8185	c9 5b		cmp #$5b	         cmp #$5b   ; {SHIFT-+}
.8187	b0 16		bcs $819f	         bcs isa     ; notAlpha
.8189	20 03 80	jsr $8003	nota       jsr sprint
>818c	05				         .byte 5
>818d	40 31 3a 20			         .text "@1: "
>8191	00				         .byte 0
.8192	20 03 80	jsr $8003	         jsr sprint
>8195	48 65 6c 6c 6f			         .text "Hello"
>819a	0d 00				         .byte 13,0
.819c	4c b2 81	jmp $81b2	         jmp e_isa
.819f	20 03 80	jsr $8003	isa       jsr sprint
>81a2	05				         .byte 5
>81a3	40 31 3a 20			         .text "@1: "
>81a7	00				         .byte 0
.81a8	20 03 80	jsr $8003	         jsr sprint
>81ab	48 65 6c 6c 6f			         .text "Hello"
>81b0	0d 00				         .byte 13,0
.81b2					e_isa
.81b2	a9 0d		lda #$0d	         lda #13
.81b4	20 03 80	jsr $8003	         jsr sprint
>81b7	48 65 6c 6c 6f			         .text "Hello"
>81bc	0d 00				         .byte 13,0

;******  End of listing
